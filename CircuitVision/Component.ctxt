#BlueJ class context
comment0.params=
comment0.target=Component()
comment0.text=\n\ This\ constructor\ is\ called\ by\ all\ Component\ supclasses.\ When\ a\ component\ is\ added\ to\ a\ circuit,\n\ it's\ endPt1\ and\ endPt2\ fields\ are\ set\ to\ the\ terminals\ at\ either\ end.\ The\ default\ resistance,\n\ current,\ and\ voltage\ are\ set\ to\ 0.\ Branch\ is\ set\ to\ -1,\ and\ remains\ so\ until\ labelBranches()\n\ is\ called\ by\ the\ circuit's\ solve()\ method.\n
comment1.params=p
comment1.target=void\ setEndPt1(Terminal)
comment1.text=\n\ Accessor\ method\ called\ by\ the\ circuit's\ addComponent()\ method\ to\ set\ the\ component's\ endpoints.\n\ @param\ p\ \ The\ terminal\ connected\ to\ one\ end\ of\ the\ component.\n
comment10.params=
comment10.target=int\ getBranch()
comment10.text=\n\ @return\ \ Which\ branch\ this\ component\ is\ a\ part\ of,\ and\ thus\ which\ current\ (current[branch])\n\ is\ traveling\ through\ this\ component\n
comment11.params=endPt
comment11.target=void\ setCurrentDirection(Terminal)
comment11.text=\n\ Current\ direction\ through\ a\ component\ is\ specified\ by\ identifying\ the\ terminal\ at\ one\ end.\ The\ current\n\ flows\ from\ the\ other\ end,\ through\ the\ component,\ and\ then\ through\ the\ currentDirection\ end.\n\ Current\ directions\ are\ set\ at\ the\ same\ time\ branches\ are\ labeled\ within\ the\ solve()\ method.\n\ @param\ endPt\ \ The\ terminal\ at\ the\ end\ of\ the\ component\ where\ current\ exits\ the\ component\n
comment12.params=
comment12.target=Terminal\ getCurrentDirection()
comment12.text=\n\ @return\ \ The\ terminal\ at\ the\ end\ of\ the\ component\ where\ current\ exits\ the\ component\n
comment13.params=other
comment13.target=boolean\ equals(Component)
comment13.text=\n\ @return\ true\ if\ both\ "this"\ component\ and\ "other"\ are\ connected\ between\ the\ same\ terminals,\n\ are\ both\ the\ same\ component\ sub-class,\ and\ have\ same\ value\ for\ Resistance\ or\ Voltage\ (if\ a\ battery).\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\n\ @return\ \ Returns\ the\ terminals\ the\ component\ is\ connected\ between,\ the\ current\ direction\ terminal,\n\ and\ the\ current\ through\ the\ component.\n
comment2.params=p
comment2.target=void\ setEndPt2(Terminal)
comment2.text=\n\ Setter\ method\ called\ by\ the\ circuit's\ addComponent()\ method\ to\ set\ the\ component's\ endpoints.\n\ @param\ p\ \ The\ terminal\ connected\ to\ the\ other\ end\ of\ the\ component.\n
comment3.params=
comment3.target=Terminal\ getEndPt1()
comment3.text=\n\ Accessor\ method\ for\ to\ get\ the\ terminal\ at\ one\ end\ of\ the\ component.\n
comment4.params=
comment4.target=Terminal\ getEndPt2()
comment4.text=\n\ Accessor\ method\ for\ to\ get\ the\ terminal\ at\ the\ other\ end\ of\ the\ component.\n
comment5.params=
comment5.target=int\ getResistance()
comment5.text=\n\ @return\ \ The\ component's\ resistance,\ which\ should\ be\ 0\ for\ batteries\ and\ wires.\n
comment6.params=r
comment6.target=void\ setResistance(int)
comment6.text=\n\ \ Sets\ a\ component's\ resistance.\ Used\ as\ components\ are\ added\ to\ a\ circuit.\n
comment7.params=i
comment7.target=void\ setCurrent(double)
comment7.text=\n\ After\ a\ circuit\ has\ been\ solved,\ this\ method\ is\ used\ to\ update\ the\ components'\ currents.\n
comment8.params=
comment8.target=double\ getCurrent()
comment8.text=\n\ @return\ \ Returns\ the\ current\ passing\ through\ the\ component,\ as\ determined\ by\ solve().\n
comment9.params=b
comment9.target=void\ setBranch(int)
comment9.text=\n\ Called\ by\ labelBranches()\ as\ part\ of\ the\ solve()\ method.\ The\ branch\ number\ corresponds\ to\ a\ current\n\ variable\:\ currents[branch].\n
numComments=15
