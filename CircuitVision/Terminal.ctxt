#BlueJ class context
comment0.params=r\ c
comment0.target=Terminal(int,\ int)
comment0.text=\n\ Constructs\ a\ Terminal\ and\ instantiates\ an\ arrayList\ to\ hold\ the\ Components\ the\ terminal\ \n\ is\ connected\ to.\ Initially,\ this\ arrayList\ is\ empty.\ The\ default\ potential\ for\ each\ terminal\n\ is\ Double.MAX_VALUE.\ This\ can\ be\ used\ to\ test\ whether\ a\ given\ terminal\ has\ been\ assigned\n\ a\ new\ potential\ value.\n\ @param\ r\ \ The\ row\ where\ the\ terminal\ is\ located\n\ @param\ c\ \ The\ column\ where\ the\ terminal\ is\ located.\n
comment1.params=c
comment1.target=boolean\ connectedTo(Component)
comment1.text=\n\ @return\ \ Returns\ true\ if\ this\ Terminal\ is\ connected\ to\ Component\ c;\ false\ otherwise.\n
comment10.params=
comment10.target=double\ getPotential()
comment10.text=\n\ @return\ \ The\ potential\ at\ this\ terminal\n
comment11.params=other
comment11.target=boolean\ equals(Terminal)
comment11.text=\n\ Two\ Terminals\ are\ "equal"\ when\ their\ row\ and\ column\ match.\ Allows\ comparison\ of\ Terminals\ from\n\ different\ circuits,\ using\ findCorrespondingComponent(),\ for\ example.\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\n\ @\ return\ Returns\ the\ x\ and\ y\ coordinates\ of\ the\ Terminal.\ Note\:\ it\ is\ not\ in\ row,\ column\ order.\n
comment2.params=
comment2.target=java.util.List\ getConnections()
comment2.text=\n\ @return\ \ A\ reference\ to\ the\ ArrayList\ holding\ the\ components\ that\ the\ terminal\ is\ connected\ to\n
comment3.params=i
comment3.target=Component\ getConnection(int)
comment3.text=\n\ Returns\ an\ individual\ component\ that\ is\ connected\ to\ the\ Terminal.\n\ @param\ i\ \ The\ index\ of\ the\ component\ in\ the\ connections\ List\ to\ be\ returned\n\ @return\ \ Returns\ the\ i'th\ component\ in\ the\ connections\ List\n
comment4.params=c
comment4.target=void\ connect(Component)
comment4.text=\n\ Adds\ a\ component\ to\ the\ connections\ List.\ This\ method\ is\ called\ by\ the\ circuit's\ addComponent()\ method\n\ @param\ c\ \ The\ Component\ to\ be\ connected\n
comment5.params=c
comment5.target=void\ disconnect(Component)
comment5.text=\n\ Removes\ the\ component\ from\ the\ connections\ List\ of\ this\ Terminal.\ Called\ by\ circuit's\ removeComponent()\ method\n\ @param\ c\ \ The\ Component\ to\ be\ disconnected.\n
comment6.params=
comment6.target=int\ numConnections()
comment6.text=\n\ @return\ \ The\ number\ of\ components\ this\ Terminal\ is\ connected\ to\n
comment7.params=
comment7.target=int\ getRow()
comment7.text=\n\ @return\ \ The\ row\ where\ this\ terminal\ is\ located\n
comment8.params=
comment8.target=int\ getCol()
comment8.text=\n\ @return\ \ The\ column\ where\ this\ terminal\ is\ located\n
comment9.params=p
comment9.target=void\ setPotential(double)
comment9.text=\n\ Sets\ the\ potential\ at\ this\ Terminal\n\ @param\ p\ \ The\ new\ potential\ at\ this\ terminal\n
numComments=13
